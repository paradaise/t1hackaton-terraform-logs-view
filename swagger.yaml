openapi: 3.0.3
info:
  title: Terraform Logs Viewer API
  version: 1.0.0
  description: |
    REST API for uploading, browsing, filtering, analyzing and exporting Terraform logs.
    
    Base URL: `http://localhost:8080`
servers:
  - url: http://localhost:8080
paths:
  /upload:
    post:
      summary: Upload Terraform log file (NDJSON / line-delimited JSON)
      operationId: uploadFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: File accepted and parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResult'
        '400':
          description: Bad request
        '500':
          description: Internal error

  /logs:
    get:
      summary: List logs with filtering and pagination
      operationId: listLogs
      parameters:
        - in: query
          name: tf_resource_type
          schema:
            type: string
        - in: query
          name: timestamp_from
          schema:
            type: string
            description: ISO-8601 timestamp lower bound
        - in: query
          name: timestamp_to
          schema:
            type: string
            description: ISO-8601 timestamp upper bound
        - in: query
          name: level
          schema:
            type: string
            enum: [info, warning, error]
        - in: query
          name: search
          schema:
            type: string
          description: Case-insensitive full-text search across JSON record
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 50
      responses:
        '200':
          description: Array of logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
        '500':
          description: Internal error

  /logs/{id}:
    get:
      summary: Get log entry by ID
      operationId: getLog
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single log entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '404':
          description: Not found

  /logs/mark-read:
    post:
      summary: Toggle read flag for provided log IDs
      operationId: markRead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
              required: [ids]
      responses:
        '204':
          description: Updated
        '400':
          description: Invalid request body
        '500':
          description: Internal error

  /groups/{tf_req_id}:
    get:
      summary: Get all logs belonging to a Terraform request ID
      operationId: getGroupByReqId
      parameters:
        - in: path
          name: tf_req_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logs in the group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
        '404':
          description: Not found

  /timeline:
    get:
      summary: Timeline entries aggregated by Terraform request ID
      operationId: getTimeline
      responses:
        '200':
          description: Timeline entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimelineEntry'
        '500':
          description: Internal error

  /metrics:
    get:
      summary: Aggregated metrics over ingested logs
      operationId: getMetrics
      responses:
        '200':
          description: Metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
        '500':
          description: Internal error

  /export/download:
    post:
      summary: Export filtered logs as JSON file download
      operationId: exportDownload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/ExportFilters'
              required: [filters]
      responses:
        '200':
          description: File stream of logs JSON
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
        '400':
          description: Invalid request
        '500':
          description: Internal error

  /export/telegram:
    post:
      summary: Send filtered export to Telegram chat (not implemented)
      operationId: exportTelegram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chat_id:
                  type: string
                filters:
                  $ref: '#/components/schemas/ExportFilters'
              required: [chat_id, filters]
      responses:
        '204':
          description: Sent
        '400':
          description: Invalid request
        '500':
          description: Internal error

  /corrupted-logs:
    get:
      summary: Return raw lines that failed JSON parsing and were repaired or skipped
      operationId: getCorrupted
      responses:
        '200':
          description: Array of raw log lines
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  schemas:
    FileUploadResult:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
      required: [id, status]

    ExportFilters:
      type: object
      properties:
        tf_resource_type:
          type: string
        timestamp_from:
          type: string
          description: ISO-8601 lower bound
        timestamp_to:
          type: string
          description: ISO-8601 upper bound
        level:
          type: string
          enum: [info, warning, error]
        search:
          type: string
        page:
          type: integer
          minimum: 1
          default: 1
        limit:
          type: integer
          minimum: 1
          default: 50

    TimelineEntry:
      type: object
      properties:
        tf_req_id:
          type: string
        start:
          type: string
        end:
          type: string
        status:
          type: string
      required: [tf_req_id, start, end, status]

    Metrics:
      type: object
      properties:
        errors:
          type: integer
        warnings:
          type: integer
        levels:
          type: object
          additionalProperties:
            type: integer
      required: [errors, warnings, levels]


